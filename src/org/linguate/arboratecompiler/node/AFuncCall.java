/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.linguate.arboratecompiler.node;

import org.linguate.arboratecompiler.analysis.*;

@SuppressWarnings("nls")
public final class AFuncCall extends PFuncCall
{
    private PFuncCallName _funcCallName_;

    public AFuncCall()
    {
        // Constructor
    }

    public AFuncCall(
        @SuppressWarnings("hiding") PFuncCallName _funcCallName_)
    {
        // Constructor
        setFuncCallName(_funcCallName_);

    }

    @Override
    public Object clone()
    {
        return new AFuncCall(
            cloneNode(this._funcCallName_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFuncCall(this);
    }

    public PFuncCallName getFuncCallName()
    {
        return this._funcCallName_;
    }

    public void setFuncCallName(PFuncCallName node)
    {
        if(this._funcCallName_ != null)
        {
            this._funcCallName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._funcCallName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._funcCallName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._funcCallName_ == child)
        {
            this._funcCallName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._funcCallName_ == oldChild)
        {
            setFuncCallName((PFuncCallName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
