/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.linguate.arboratecompiler.node;

import org.linguate.arboratecompiler.analysis.*;

@SuppressWarnings("nls")
public final class ALogicalNotExpr extends PExpr
{
    private PExpr _operand_;

    public ALogicalNotExpr()
    {
        // Constructor
    }

    public ALogicalNotExpr(
        @SuppressWarnings("hiding") PExpr _operand_)
    {
        // Constructor
        setOperand(_operand_);

    }

    @Override
    public Object clone()
    {
        return new ALogicalNotExpr(
            cloneNode(this._operand_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogicalNotExpr(this);
    }

    public PExpr getOperand()
    {
        return this._operand_;
    }

    public void setOperand(PExpr node)
    {
        if(this._operand_ != null)
        {
            this._operand_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._operand_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._operand_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._operand_ == child)
        {
            this._operand_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._operand_ == oldChild)
        {
            setOperand((PExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
