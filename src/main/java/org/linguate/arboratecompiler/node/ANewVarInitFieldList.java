/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.linguate.arboratecompiler.node;

import java.util.*;
import org.linguate.arboratecompiler.analysis.*;

@SuppressWarnings("nls")
public final class ANewVarInitFieldList extends PNewVarInitFieldList
{
    private final LinkedList<PNewVarInitField> _newVarInitField_ = new LinkedList<PNewVarInitField>();

    public ANewVarInitFieldList()
    {
        // Constructor
    }

    public ANewVarInitFieldList(
        @SuppressWarnings("hiding") List<?> _newVarInitField_)
    {
        // Constructor
        setNewVarInitField(_newVarInitField_);

    }

    @Override
    public Object clone()
    {
        return new ANewVarInitFieldList(
            cloneList(this._newVarInitField_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANewVarInitFieldList(this);
    }

    public LinkedList<PNewVarInitField> getNewVarInitField()
    {
        return this._newVarInitField_;
    }

    public void setNewVarInitField(List<?> list)
    {
        for(PNewVarInitField e : this._newVarInitField_)
        {
            e.parent(null);
        }
        this._newVarInitField_.clear();

        for(Object obj_e : list)
        {
            PNewVarInitField e = (PNewVarInitField) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._newVarInitField_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._newVarInitField_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._newVarInitField_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PNewVarInitField> i = this._newVarInitField_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PNewVarInitField) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
